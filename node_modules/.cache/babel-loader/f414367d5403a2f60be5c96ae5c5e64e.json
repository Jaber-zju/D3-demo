{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/src/force_chart.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from 'd3';\n\nclass Force_chart extends Component {\n  constructor(props) {\n    super(props);\n    this.data = props.chartState;\n  }\n\n  drawForceChart(nodes, edges) {\n    const padding = this.data.padding;\n    const width = this.data.width;\n    const pieHeight = this.data.pieHeight;\n    const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", pieHeight).style('padding-left', padding.left).style('padding-top', padding.top);\n    const g = svg.append('g'); // 则svg中创建g\n\n    const simulation = d3.forceSimulation(nodes) // 指定被引用的nodes数组\n    .force('link', d3.forceLink(edges).distance(150)).force('collision', d3.forceCollide(1).strength(0.1)).force('center', d3.forceCenter(width / 2, pieHeight / 2)).force('charge', d3.forceManyBody().strength(-1000).distanceMax(800));\n    const edgesLine = svg.selectAll('line').data(edges) // 绑定数据\n    .enter() // 为数据添加对应数量的占位符\n    .append('path') // 在占位符上面生成折线（用path画）\n    .attr('d', d => {\n      return d && 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n    }) //遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n    .attr('id', (d, i) => {\n      return i && 'edgepath' + i;\n    }) // 设置id，用于连线文字\n    .attr('marker-end', 'url(#arrow)') // 根据箭头标记的id号标记箭头\n    .style('stroke', '#000') // 颜色\n    .style('stroke-width', 1); // 粗细\n\n    const svg_edges = svg.selectAll(\"line\").data(edges).enter().append(\"line\").style(\"stroke\", \"#ccc\").style(\"stroke-width\", 1).on(\"mouseover\", function (d, i) {\n      d3.select(this).style(\"stroke\", \"grey\").style(\"stroke-width\", 3);\n    }).on(\"mouseout\", function (d, i) {\n      d3.select(this).style(\"stroke\", \"#ccc\").style(\"stroke-width\", 1);\n    });\n    const color = d3.schemeSet2;\n    const svg_nodes = svg.selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"r\", 10).style(\"fill\", function (d, i) {\n      return color[i];\n    }).call(force.drag); // .on('mouseover', d => showDetail(d))\n    // .on(\"mouseover\",function(d,i){\n    //   d3.select(this)\n    //     .attr(\"r\",'20px')\n    //   d3.select('#tooltip')\n    //     .classed('hidden', false)\n    //     .style('left', (d.x - 50))\n    //     .style('top', (d.y-40))\n    //     .select('#place').text(d.name)\n    // })\n    // // .on('mouseout', d => hideDetail())\n    // .on('mouseout', d => {\n    //   d3.select(this)\n    //     .attr(\"r\",'10px')  //鼠标移出时，设置圆点半径报错\n    //   d3.select('#tooltip').classed('hidden', true)\n    //     .select('#place').text()\n    // })\n\n    force.on(\"tick\", function () {\n      svg_edges.attr(\"x1\", function (d) {\n        return d.source.x;\n      });\n      svg_edges.attr(\"y1\", function (d) {\n        return d.source.y;\n      });\n      svg_edges.attr(\"x2\", function (d) {\n        return d.target.x;\n      });\n      svg_edges.attr(\"y2\", function (d) {\n        return d.target.y;\n      });\n      svg_nodes.attr(\"cx\", function (d) {\n        return d.x;\n      });\n      svg_nodes.attr(\"cy\", function (d) {\n        return d.y;\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.drawForceChart(this.data.forceNodes, this.data.forceEdges);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default Force_chart;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/yu01/d3_ex/src/force_chart.js"],"names":["React","Component","d3","Force_chart","constructor","props","data","chartState","drawForceChart","nodes","edges","padding","width","pieHeight","svg","select","append","attr","style","left","top","g","simulation","forceSimulation","force","forceLink","distance","forceCollide","strength","forceCenter","forceManyBody","distanceMax","edgesLine","selectAll","enter","d","source","x","y","target","i","svg_edges","on","color","schemeSet2","svg_nodes","call","drag","componentDidMount","forceNodes","forceEdges","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport * as d3 from 'd3'\n\nclass Force_chart extends Component{\n  constructor(props) {\n    super(props)\n    this.data = props.chartState\n  }\n\n  drawForceChart (nodes, edges) {\n    const padding = this.data.padding\n    const width = this.data.width\n    const pieHeight = this.data.pieHeight\n\n    const svg = d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", pieHeight)\n      .style('padding-left', padding.left)\n      .style('padding-top', padding.top)\n\n    const g = svg.append('g'); // 则svg中创建g\n\n    const simulation = d3.forceSimulation(nodes) // 指定被引用的nodes数组\n                          .force('link', d3.forceLink(edges).distance(150))\n                          .force('collision', d3.forceCollide(1).strength(0.1))\n                          .force('center', d3.forceCenter(width / 2, pieHeight / 2))\n                          .force('charge', d3.forceManyBody().strength(-1000).distanceMax(800));\n\n    const edgesLine = svg.selectAll('line')\n                          .data(edges) // 绑定数据\n                          .enter() // 为数据添加对应数量的占位符\n                          .append('path') // 在占位符上面生成折线（用path画）\n                          .attr('d', (d) => { return d && 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y; }) //遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n                          .attr('id', (d, i) => { return i && 'edgepath' + i; }) // 设置id，用于连线文字\n                          .attr('marker-end', 'url(#arrow)') // 根据箭头标记的id号标记箭头\n                          .style('stroke', '#000') // 颜色\n                          .style('stroke-width', 1); // 粗细\n\n\n    const svg_edges = svg.selectAll(\"line\")\n                          .data(edges)\n                          .enter()\n                          .append(\"line\")\n                          .style(\"stroke\",\"#ccc\")\n                          .style(\"stroke-width\",1)\n                          .on(\"mouseover\",function(d,i){\n                            d3.select(this)\n                              .style(\"stroke\",\"grey\")\n                              .style(\"stroke-width\",3)\n                          })\n                          .on(\"mouseout\",function(d,i){\n                            d3.select(this)\n                              .style(\"stroke\",\"#ccc\")\n                              .style(\"stroke-width\",1)\n                          })\n    const color = d3.schemeSet2\n    const svg_nodes = svg.selectAll(\"circle\")\n                          .data(nodes)\n                          .enter()\n                          .append(\"circle\")\n                          .attr(\"r\",10)\n                          .style(\"fill\",function(d,i){\n                            return color[i];\n                          })\n                          .call(force.drag)\n                          // .on('mouseover', d => showDetail(d))\n                          // .on(\"mouseover\",function(d,i){\n                          //   d3.select(this)\n                          //     .attr(\"r\",'20px')\n                          //   d3.select('#tooltip')\n                          //     .classed('hidden', false)\n                          //     .style('left', (d.x - 50))\n                          //     .style('top', (d.y-40))\n                          //     .select('#place').text(d.name)\n                          // })\n                          // // .on('mouseout', d => hideDetail())\n                          // .on('mouseout', d => {\n                          //   d3.select(this)\n                          //     .attr(\"r\",'10px')  //鼠标移出时，设置圆点半径报错\n                          //   d3.select('#tooltip').classed('hidden', true)\n                          //     .select('#place').text()\n                          // })\n\n    force.on(\"tick\", function(){\n      svg_edges.attr(\"x1\",function(d){ return d.source.x; });\n      svg_edges.attr(\"y1\",function(d){ return d.source.y; });\n      svg_edges.attr(\"x2\",function(d){ return d.target.x; });\n      svg_edges.attr(\"y2\",function(d){ return d.target.y; });\n\n      svg_nodes.attr(\"cx\",function(d){ return d.x; });\n      svg_nodes.attr(\"cy\",function(d){ return d.y; });\n    });\n  }\n\n  componentDidMount() {\n    this.drawForceChart(this.data.forceNodes, this.data.forceEdges)\n  }\n\n  render() {\n    return (\n      <div></div>\n    )\n  }\n\n}\n\nexport default Force_chart"]},"metadata":{},"sourceType":"module"}