{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/src/barChart_2.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\n\nclass BarChart_2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.timer = () => {\n      setInterval(this.drawChart, 1000);\n    };\n\n    this.state = {\n      width: 700,\n      height: 300\n    };\n  }\n\n  drawChart() {\n    const data = [12, 5, 6, 6, 9, 10];\n    const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", 700).attr(\"height\", 300);\n    const bars = svg.selectAll('rect').data(data).enter().append('rect');\n    bars.attr('x', (d, i) => i * 40).attr('y', (d, i) => this.state.height - d * 10).attr('width', 25).attr('height', (d, i) => d * 10).attr('fill', 'green');\n    const text = svg.selectAll('text').data(data).enter().append('text');\n    text.text((d, i) => d).attr('fill', 'blue').attr('x', (d, i) => i * 40 + 10).attr('y', (d, i) => this.state.height - d * 10 - 10); // 生成1-100以内的整数\n\n    let nextData = () => {\n      return Math.floor(Math.random() * 100);\n    }; // 修改柱状图绑定的数组，并移除画布，进行重绘\n\n\n    let pushData = () => {\n      data.shift();\n      data.push(nextData());\n      console.log(data); // 不要用\"body\"，否则不会移除画布\n      // d3.select(\"svg\").remove()\n      // d3.select(\"body\").append(\"svg\").attr(\"width\", this.state.width).attr(\"height\", this.state.height)\n      // svg.selectAll('rect').data(data).enter().append('rect')\n      //   .attr('x', (d, i) => i * 40).attr('y', (d, i) => this.state.height - d * 10).attr('width', 25).attr('height', (d, i) => d * 10).attr('fill', 'green')\n      // svg.selectAll('text').data(data).enter().append('text')\n      //   .text((d, i) => d).attr('fill', 'blue').attr('x', (d, i) => i * 40 + 10).attr('y', (d, i) => this.state.height - d * 10 - 10)\n    };\n\n    pushData();\n  }\n\n  componentDidMount() {\n    this.timer();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default BarChart_2;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/yu01/d3_ex/src/barChart_2.js"],"names":["React","Component","d3","BarChart_2","constructor","props","timer","setInterval","drawChart","state","width","height","data","svg","select","append","attr","bars","selectAll","enter","d","i","text","nextData","Math","floor","random","pushData","shift","push","console","log","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsCnBC,KAtCmB,GAsCX,MAAM;AACZC,MAAAA,WAAW,CAAC,KAAKC,SAAN,EAAiB,IAAjB,CAAX;AACD,KAxCkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,GADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAKD;;AAEDH,EAAAA,SAAS,GAAG;AACV,UAAMI,IAAI,GAAG,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,EAAjB,CAAb;AACA,UAAMC,GAAG,GAAGX,EAAE,CAACY,MAAH,CAAU,MAAV,EAAkBC,MAAlB,CAAyB,KAAzB,EAAgCC,IAAhC,CAAqC,OAArC,EAA8C,GAA9C,EAAmDA,IAAnD,CAAwD,QAAxD,EAAkE,GAAlE,CAAZ;AACA,UAAMC,IAAI,GAAGJ,GAAG,CAACK,SAAJ,CAAc,MAAd,EAAsBN,IAAtB,CAA2BA,IAA3B,EAAiCO,KAAjC,GAAyCJ,MAAzC,CAAgD,MAAhD,CAAb;AACAE,IAAAA,IAAI,CAACD,IAAL,CAAU,GAAV,EAAe,CAACI,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,EAA7B,EAAiCL,IAAjC,CAAsC,GAAtC,EAA2C,CAACI,CAAD,EAAIC,CAAJ,KAAU,KAAKZ,KAAL,CAAWE,MAAX,GAAoBS,CAAC,GAAG,EAA7E,EAAiFJ,IAAjF,CAAsF,OAAtF,EAA+F,EAA/F,EAAmGA,IAAnG,CAAwG,QAAxG,EAAkH,CAACI,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAG,EAAhI,EAAoIJ,IAApI,CAAyI,MAAzI,EAAiJ,OAAjJ;AACA,UAAMM,IAAI,GAAGT,GAAG,CAACK,SAAJ,CAAc,MAAd,EAAsBN,IAAtB,CAA2BA,IAA3B,EAAiCO,KAAjC,GAAyCJ,MAAzC,CAAgD,MAAhD,CAAb;AACAO,IAAAA,IAAI,CAACA,IAAL,CAAU,CAACF,CAAD,EAAIC,CAAJ,KAAUD,CAApB,EAAuBJ,IAAvB,CAA4B,MAA5B,EAAoC,MAApC,EAA4CA,IAA5C,CAAiD,GAAjD,EAAsD,CAACI,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,EAAJ,GAAS,EAAzE,EAA6EL,IAA7E,CAAkF,GAAlF,EAAuF,CAACI,CAAD,EAAIC,CAAJ,KAAU,KAAKZ,KAAL,CAAWE,MAAX,GAAoBS,CAAC,GAAG,EAAxB,GAA6B,EAA9H,EANU,CAOV;;AACA,QAAIG,QAAQ,GAAG,MAAM;AACnB,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,GAAzB,CAAP;AACD,KAFD,CARU,CAYV;;;AACA,QAAIC,QAAQ,GAAG,MAAM;AACnBf,MAAAA,IAAI,CAACgB,KAAL;AACAhB,MAAAA,IAAI,CAACiB,IAAL,CAAUN,QAAQ,EAAlB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ,EAHmB,CAInB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAXD;;AAaAe,IAAAA,QAAQ;AACT;;AAMDK,EAAAA,iBAAiB,GAAG;AAClB,SAAK1B,KAAL;AAED;;AAED2B,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAlDgC;;AAqDnC,eAAe9B,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from \"d3\";\n\nclass BarChart_2 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      width: 700,\n      height: 300,\n\n    }\n  }\n\n  drawChart() {\n    const data = [12, 5, 6, 6, 9, 10]\n    const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", 700).attr(\"height\", 300);\n    const bars = svg.selectAll('rect').data(data).enter().append('rect')\n    bars.attr('x', (d, i) => i * 40).attr('y', (d, i) => this.state.height - d * 10).attr('width', 25).attr('height', (d, i) => d * 10).attr('fill', 'green')\n    const text = svg.selectAll('text').data(data).enter().append('text')\n    text.text((d, i) => d).attr('fill', 'blue').attr('x', (d, i) => i * 40 + 10).attr('y', (d, i) => this.state.height - d * 10 - 10)\n    // 生成1-100以内的整数\n    let nextData = () => {\n      return Math.floor(Math.random()*100)\n    }\n\n    // 修改柱状图绑定的数组，并移除画布，进行重绘\n    let pushData = () => {\n      data.shift()\n      data.push(nextData())\n      console.log(data)\n      // 不要用\"body\"，否则不会移除画布\n      // d3.select(\"svg\").remove()\n      // d3.select(\"body\").append(\"svg\").attr(\"width\", this.state.width).attr(\"height\", this.state.height)\n      // svg.selectAll('rect').data(data).enter().append('rect')\n      //   .attr('x', (d, i) => i * 40).attr('y', (d, i) => this.state.height - d * 10).attr('width', 25).attr('height', (d, i) => d * 10).attr('fill', 'green')\n      // svg.selectAll('text').data(data).enter().append('text')\n      //   .text((d, i) => d).attr('fill', 'blue').attr('x', (d, i) => i * 40 + 10).attr('y', (d, i) => this.state.height - d * 10 - 10)\n    }\n\n    pushData()\n  }\n\n  timer = () => {\n    setInterval(this.drawChart, 1000)\n  }\n\n  componentDidMount() {\n    this.timer()\n\n  }\n\n  render() {\n    return <div></div>\n  }\n}\n\nexport default BarChart_2;\n"]},"metadata":{},"sourceType":"module"}