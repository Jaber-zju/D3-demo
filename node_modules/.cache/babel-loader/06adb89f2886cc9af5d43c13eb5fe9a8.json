{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/src/chart/stackChart/stackChart.jsx\";\nimport React, { Component } from \"react\";\nimport * as d3 from 'd3';\n\nclass StackChart extends Component {\n  constructor(props) {\n    super(props);\n    this.data = props.chartState;\n  }\n\n  drawStack(data) {\n    const padding = this.data.padding;\n    const width = this.data.width;\n    const pieHeight = this.data.pieHeight;\n    const stack = d3.stack().keys([\"apples\", \"bananas\", \"cherries\", \"dates\"]).order(d3.stackOrderNone).offset(d3.stackOffsetNone);\n    const series = stack(data);\n    console.log(series);\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", pieHeight).style('padding-left', padding.left).style('padding-top', padding.top); // 将二维数组的第一维剥离，打散成n列\n\n    let rectContainer = svg.selectAll('rectContainer').data(stackData).enter().append('g').attr('class', 'rectContainer').attr('fill', (d, i) => {\n      return colorZ(d.key);\n    }); // 渲染每一列\n\n    rectContainer.selectAll('rect').data(d => d).enter().append('rect').attr('x', d => {\n      return xScale(d.data.month) + padding.left + margin / 2;\n    }).attr('y', d => {\n      return yScale(d[1]) + padding.top;\n    }).attr('width', d => {\n      return xScale.bandwidth() - margin;\n    }).attr('height', d => {\n      return height - padding.top - padding.bottom - yScale(d[1] - d[0]);\n    }).attr('stroke', '#ccc'); // 添加描述\n\n    svg.selectAll('circle').data(['apples', 'bananas', 'cherries', 'oranges']).enter().append('circle').attr('cx', d => {\n      return width - padding.right - 80;\n    }).attr('cy', (d, i) => {\n      return padding.top + 25 * i;\n    }).attr('r', '6').attr('fill', d => {\n      return colorZ(d);\n    });\n    let texts = svg.selectAll('textContainer').data(['apples', 'bananas', 'cherries', 'oranges']).enter().append('g').attr('class', 'textContainer');\n    texts.append('text').attr('x', d => {\n      return width - padding.right - 60;\n    }).attr('y', (d, i) => {\n      return padding.top + 25 * i;\n    }).attr('dy', '0.32em').text(d => d).attr('fill', d => colorZ(d));\n  }\n\n  componentDidMount() {\n    this.drawStack(this.data.stackData);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default StackChart;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/yu01/d3_ex/src/chart/stackChart/stackChart.jsx"],"names":["React","Component","d3","StackChart","constructor","props","data","chartState","drawStack","padding","width","pieHeight","stack","keys","order","stackOrderNone","offset","stackOffsetNone","series","console","log","color","scaleOrdinal","schemeCategory10","svg","select","append","attr","style","left","top","rectContainer","selectAll","stackData","enter","d","i","colorZ","key","xScale","month","margin","yScale","bandwidth","height","bottom","right","texts","text","componentDidMount","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport * as d3 from 'd3'\n\nclass StackChart extends Component{\n  constructor(props) {\n    super(props);\n    this.data = props.chartState\n  }\n\n  drawStack (data) {\n    const padding = this.data.padding\n    const width = this.data.width\n    const pieHeight = this.data.pieHeight\n\n    const stack = d3.stack()\n      .keys([\"apples\", \"bananas\", \"cherries\", \"dates\"])\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const series = stack(data)\n    console.log(series)\n\n    const color = d3.scaleOrdinal(d3.schemeCategory10)\n\n    const svg = d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", pieHeight)\n      .style('padding-left', padding.left)\n      .style('padding-top', padding.top)\n\n    // 将二维数组的第一维剥离，打散成n列\n    let rectContainer = svg.selectAll('rectContainer')\n      .data(stackData)\n      .enter()\n      .append('g')\n      .attr('class', 'rectContainer')\n      .attr('fill', (d, i) => { return colorZ(d.key) })\n    // 渲染每一列\n    rectContainer.selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => { return xScale(d.data.month) + padding.left + margin / 2 })\n      .attr('y', (d) => { return yScale(d[1]) + padding.top })\n      .attr('width', (d) => { return xScale.bandwidth() - margin })\n      .attr('height', (d) => { return height - padding.top - padding.bottom - yScale(d[1] - d[0]) })\n      .attr('stroke', '#ccc')\n\n    // 添加描述\n    svg.selectAll('circle')\n      .data(['apples', 'bananas', 'cherries', 'oranges'])\n      .enter()\n      .append('circle')\n      .attr('cx', (d) => { return width - padding.right - 80 })\n      .attr('cy', (d, i) => { return padding.top + 25 * i })\n      .attr('r', '6')\n      .attr('fill', (d) => { return colorZ(d) })\n    let texts = svg.selectAll('textContainer')\n      .data(['apples', 'bananas', 'cherries', 'oranges'])\n      .enter()\n      .append('g')\n      .attr('class', 'textContainer')\n    texts.append('text')\n      .attr('x', (d) => { return width - padding.right - 60 })\n      .attr('y', (d, i) => { return padding.top + 25 * i })\n      .attr('dy', '0.32em')\n      .text((d) => d)\n      .attr('fill', (d) => colorZ(d))\n\n  }\n\n  componentDidMount() {\n    this.drawStack(this.data.stackData)\n  }\n\n  render() {\n    return <div></div>\n  }\n\n}\n\nexport default StackChart"]},"metadata":{},"sourceType":"module"}