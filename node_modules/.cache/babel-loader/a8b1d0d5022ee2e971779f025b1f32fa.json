{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/src/chart/forceChart/forceChart.jsx\";\nimport React, { Component } from \"react\";\nimport * as d3 from 'd3';\n\nclass ForceChart extends Component {\n  constructor(props) {\n    super(props);\n    this.data = props.chartState;\n  }\n\n  drawForceChart(nodes, edges) {\n    const padding = this.data.padding;\n    const width = this.data.width;\n    const pieHeight = this.data.pieHeight;\n    const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width).attr(\"height\", pieHeight).style('padding-left', padding.left).style('padding-top', padding.top);\n    const g = svg.append('g'); // 则svg中创建g\n\n    const simulation = d3.forceSimulation // 指定被引用的nodes数组\n    .nodes(nodes).force('link', d3.forceLink(edges).distance(200)).force('charge', d3.forceManyBody()).force('center', d3.forceCenter((width - padding.left - padding.right) / 2, (pieHeight - padding.top - padding.bottom) / 2));\n    let color = d3.scaleOrdinal(d3.schemeCategory10);\n    const edgesLine = svg.selectAll('line').data(edges) // 绑定数据\n    .enter() // 为数据添加对应数量的占位符\n    .append('line') // 在占位符上面生成折线（用path画）\n    .attr('d', d => {\n      return d && 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y;\n    }) //遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n    .attr('id', (d, i) => {\n      return i && 'edgepath' + i;\n    }) // 设置id，用于连线文字\n    .attr('marker-end', 'url(#arrow)') // 根据箭头标记的id号标记箭头\n    .style('stroke', '#000') // 颜色\n    .style('stroke-width', 1); // 粗细\n    // 添加节点\n\n    const nodesCircle = svg.selectAll('circle').data(nodes).enter().append('circle') // 创建圆\n    .attr('r', 20) // 半径\n    .style('fill', (d, i) => color(i)) // 填充颜色\n    .style('stroke', '#9FF') // 边框颜色\n    .style('stroke-width', 1) // 边框粗细\n    // 添加圆圈的拖拽事件，同时他会触发simulation的tick事件，重新布局该区域\n    .call(d3.drag().on('start', function (d) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0.5).restart(); // 设置衰减系数，对节点位置移动过程的模拟，数值越高移动越快，数值范围[0，1]\n        // 拖拽节点后，重新启动模拟\n      }\n\n      d.fx = d.x; // d.x是当前位置，d.fx是静止时位置\n\n      d.fy = d.y;\n    }).on('drag', function (d) {\n      d.fx = d3.event.x; // d.event.x是拖拽节点时节点的实时位置，d.fx是静止时位置\n\n      d.fy = d3.event.y;\n    }).on('end', function (d) {\n      if (!d3.event.active) {\n        simulation.alphaTarget(0);\n      }\n\n      d.fx = null; // 解除dragged中固定的坐标\n\n      d.fy = null;\n    })); // 添加描述\n\n    svg.selectAll('text').data(nodes).enter().append('text').style('font-size', '12px').style('fill', '#000').attr('dx', 0).attr('dy', 0).text(function (d) {\n      return d.name;\n    }); // 添加relation\n\n    svg.selectAll('.relation').data(edges).enter().append('text').style('fill', 'red').style('font-size', '11px').attr('class', 'relation').attr('dx', 0).attr('dy', 0).text(function (d) {\n      return d.relation;\n    }); // 添加连线\n    // svg.selectAll('line')\n    //   .data(edges)\n    //   .enter()\n    //   .append('line')\n    //   .style('stroke', '#ccc')\n    //   .style('stroke-width', 2)\n    // 鼠标移入移出圆点的变化\n\n    nodesCircle.on('mouseover', function () {\n      d3.select(this).style('fill', 'green').attr('stroke', 'green');\n      nodesCircle.append('title').text(node => {\n        // .text设置气泡提示内容\n        return node.name; // 气泡提示为node的名称\n      });\n    }).on('mouseout', function () {\n      d3.select(this).style('fill', '#7efffe').attr('stroke', '#7efffe');\n    }); // simulation.on(\"tick\", function(){\n    //   edgesLine.attr(\"x1\",function(d){ return d.source.x; });\n    //   edgesLine.attr(\"y1\",function(d){ return d.source.y; });\n    //   edgesLine.attr(\"x2\",function(d){ return d.target.x; });\n    //   edgesLine.attr(\"y2\",function(d){ return d.target.y; });\n    //\n    //   nodesCircle.attr(\"cx\",function(d){ return d.x; });\n    //   nodesCircle.attr(\"cy\",function(d){ return d.y; });\n    // });\n    //数据重绘\n\n    simulation.on('tick', function () {\n      svg.selectAll('circle').attr('cx', function (d) {\n        return d.x;\n      }).attr('cy', function (d) {\n        return d.y;\n      });\n      svg.selectAll('text').attr('x', function (d) {\n        return d.x;\n      }).attr('y', function (d) {\n        return d.y;\n      });\n      svg.selectAll('line').attr('x1', function (d) {\n        return d.source.x;\n      }).attr('y1', function (d) {\n        return d.source.y;\n      }).attr('x2', function (d) {\n        return d.target.x;\n      }).attr('y2', function (d) {\n        return d.target.y;\n      });\n      svg.selectAll('.relation').attr('x', function (d) {\n        return (d.source.x + d.target.x) / 2;\n      }).attr('y', function (d) {\n        return (d.source.y + d.target.y) / 2;\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.drawForceChart(this.data.nodes, this.data.links);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default ForceChart;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/yu01/d3_ex/src/chart/forceChart/forceChart.jsx"],"names":["React","Component","d3","ForceChart","constructor","props","data","chartState","drawForceChart","nodes","edges","padding","width","pieHeight","svg","select","append","attr","style","left","top","g","simulation","forceSimulation","force","forceLink","distance","forceManyBody","forceCenter","right","bottom","color","scaleOrdinal","schemeCategory10","edgesLine","selectAll","enter","d","source","x","y","target","i","nodesCircle","call","drag","on","event","active","alphaTarget","restart","fx","fy","text","name","relation","node","componentDidMount","links","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport * as d3 from 'd3'\n\nclass ForceChart extends Component{\n  constructor(props) {\n    super(props)\n    this.data = props.chartState\n  }\n\n  drawForceChart (nodes, edges) {\n    const padding = this.data.padding\n    const width = this.data.width\n    const pieHeight = this.data.pieHeight\n\n    const svg = d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", pieHeight)\n      .style('padding-left', padding.left)\n      .style('padding-top', padding.top)\n\n    const g = svg.append('g'); // 则svg中创建g\n\n    const simulation = d3.forceSimulation// 指定被引用的nodes数组\n      .nodes(nodes)\n      .force('link', d3.forceLink(edges).distance(200))\n      .force('charge', d3.forceManyBody())\n      .force('center', d3.forceCenter((width - padding.left - padding.right) / 2, (pieHeight - padding.top - padding.bottom) / 2))\n\n    let color = d3.scaleOrdinal(d3.schemeCategory10)\n\n    const edgesLine = svg.selectAll('line')\n      .data(edges) // 绑定数据\n      .enter() // 为数据添加对应数量的占位符\n      .append('line') // 在占位符上面生成折线（用path画）\n      .attr('d', (d) => { return d && 'M ' + d.source.x + ' ' + d.source.y + ' L ' + d.target.x + ' ' + d.target.y; }) //遍历所有数据。d表示当前遍历到的数据，返回绘制的贝塞尔曲线\n      .attr('id', (d, i) => { return i && 'edgepath' + i; }) // 设置id，用于连线文字\n      .attr('marker-end', 'url(#arrow)') // 根据箭头标记的id号标记箭头\n      .style('stroke', '#000') // 颜色\n      .style('stroke-width', 1); // 粗细\n\n    // 添加节点\n    const nodesCircle = svg.selectAll('circle')\n      .data(nodes)\n      .enter()\n      .append('circle') // 创建圆\n      .attr('r', 20) // 半径\n      .style('fill', (d, i) => color(i)) // 填充颜色\n      .style('stroke', '#9FF') // 边框颜色\n      .style('stroke-width', 1) // 边框粗细\n      // 添加圆圈的拖拽事件，同时他会触发simulation的tick事件，重新布局该区域\n      .call(d3.drag()\n        .on('start', function (d) {\n          if (!d3.event.active) {\n            simulation.alphaTarget(0.5).restart() // 设置衰减系数，对节点位置移动过程的模拟，数值越高移动越快，数值范围[0，1]\n                                                  // 拖拽节点后，重新启动模拟\n          }\n          d.fx = d.x   // d.x是当前位置，d.fx是静止时位置\n          d.fy = d.y\n        })\n        .on('drag', function (d) {\n          d.fx = d3.event.x   // d.event.x是拖拽节点时节点的实时位置，d.fx是静止时位置\n          d.fy = d3.event.y\n        })\n        .on('end', function (d) {\n          if (!d3.event.active) {\n            simulation.alphaTarget(0)\n          }\n          d.fx = null         // 解除dragged中固定的坐标\n          d.fy = null\n        })\n      )\n\n    // 添加描述\n    svg.selectAll('text')\n      .data(nodes)\n      .enter()\n      .append('text')\n      .style('font-size', '12px')\n      .style('fill', '#000')\n      .attr('dx', 0)\n      .attr('dy', 0)\n      .text(function (d) { return d.name })\n\n    // 添加relation\n    svg.selectAll('.relation')\n      .data(edges)\n      .enter()\n      .append('text')\n      .style('fill', 'red')\n      .style('font-size', '11px')\n      .attr('class', 'relation')\n      .attr('dx', 0)\n      .attr('dy', 0)\n      .text(function (d) { return d.relation })\n\n    // 添加连线\n    // svg.selectAll('line')\n    //   .data(edges)\n    //   .enter()\n    //   .append('line')\n    //   .style('stroke', '#ccc')\n    //   .style('stroke-width', 2)\n\n    // 鼠标移入移出圆点的变化\n\n    nodesCircle.on('mouseover', function () {\n                  d3.select(this).style('fill', 'green').attr('stroke', 'green')\n                  nodesCircle.append('title')\n                    .text((node) => { // .text设置气泡提示内容\n                      return node.name; // 气泡提示为node的名称\n                    });\n                })\n                .on('mouseout', function () {\n                  d3.select(this).style('fill', '#7efffe').attr('stroke', '#7efffe')\n                })\n\n    // simulation.on(\"tick\", function(){\n    //   edgesLine.attr(\"x1\",function(d){ return d.source.x; });\n    //   edgesLine.attr(\"y1\",function(d){ return d.source.y; });\n    //   edgesLine.attr(\"x2\",function(d){ return d.target.x; });\n    //   edgesLine.attr(\"y2\",function(d){ return d.target.y; });\n    //\n    //   nodesCircle.attr(\"cx\",function(d){ return d.x; });\n    //   nodesCircle.attr(\"cy\",function(d){ return d.y; });\n    // });\n\n    //数据重绘\n    simulation.on('tick', function () {\n      svg.selectAll('circle')\n        .attr('cx', function (d) { return d.x })\n        .attr('cy', function (d) { return d.y })\n      svg.selectAll('text')\n        .attr('x', function (d) { return d.x })\n        .attr('y', function (d) { return d.y })\n      svg.selectAll('line')\n        .attr('x1', function (d) { return d.source.x })\n        .attr('y1', function (d) { return d.source.y })\n        .attr('x2', function (d) { return d.target.x })\n        .attr('y2', function (d) { return d.target.y })\n      svg.selectAll('.relation')\n        .attr('x', function (d) { return (d.source.x + d.target.x) / 2 })\n        .attr('y', function (d) { return (d.source.y + d.target.y) / 2 })\n    })\n  }\n\n  componentDidMount() {\n    this.drawForceChart(this.data.nodes, this.data.links)\n  }\n\n  render() {\n    return (\n      <div></div>\n    )\n  }\n\n}\n\nexport default ForceChart"]},"metadata":{},"sourceType":"module"}