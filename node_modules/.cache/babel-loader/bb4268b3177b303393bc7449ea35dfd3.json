{"ast":null,"code":"import _initializerDefineProperty from \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nimport { action, observable } from \"mobx\";\nlet chartState = (_dec = action.bound, (_class = (_temp = class chartState {\n  constructor() {\n    _initializerDefineProperty(this, \"dataSet\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"changeData\", _descriptor2, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"dataSet\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [11, 5, 6, 6, 9, 10];\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"changeData\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return () => {\n      console.log(this.dataSet);\n    };\n  }\n})), _class));\nexport default new chartState();","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/yu01/d3_ex/src/store/store.js"],"names":["action","observable","chartState","bound","console","log","dataSet"],"mappings":";;;;;;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,QAAiC,MAAjC;IAEMC,U,WAGHF,MAAM,CAACG,K,qBAHV,MAAMD,UAAN,CAAiB;AAAA;AAAA;;AAAA;AAAA;;AAAA,C,iFACdD,U;;;;;WAAqB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,EAAjB,C;;;;;;;WAEK,MAAM;AAC/BG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,OAAjB;AACD,K;;;AAGH,eAAe,IAAIJ,UAAJ,EAAf","sourcesContent":["import {action, observable} from \"mobx\";\n\nclass chartState {\n  @observable dataSet = [11, 5, 6, 6, 9, 10]\n\n  @action.bound changeData = () => {\n    console.log(this.dataSet)\n  }\n}\n\nexport default new chartState()"]},"metadata":{},"sourceType":"module"}