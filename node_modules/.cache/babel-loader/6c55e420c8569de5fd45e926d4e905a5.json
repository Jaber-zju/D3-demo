{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - \\u6570\\u636E/yu01/d3_ex/src/chart/chordChart/chordChart.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from 'd3';\n\nclass ChordChart extends Component {\n  constructor(props) {\n    super(props);\n    this.data = props.chartState;\n  }\n\n  drawChord(data, continent) {\n    const padding = this.data.padding;\n    const width = this.data.width;\n    const pieHeight = this.data.pieHeight;\n    const radius = this.data.radius;\n    const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", this.data.width).attr(\"height\", this.data.pieHeight).style('padding-left', padding.left).style('padding-top', padding.top);\n    const chord = d3.chord(); // .padAngle(0.03)\n    // .sortSubgroups(d3.ascending)\n\n    console.log(chord); // 获取节点,也就是最后那个group,即五大洲对应的角度参数值,这里必须要这么做，否则取不到对应的角度值\n\n    const nodes = chord(data)['groups']; // 获取弦,需要剔除最后的那个group\n\n    const arcs = chord(data).map(item => {\n      return item;\n    });\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const g = svg.append('g').attr('transform', 'translate(' + width / 2 + ',' + pieHeight / 2 + ')'); //装节点的外部圆环g,之后所有的绘图都在这个容器里面画\n\n    const gOuter = g.selectAll('.gNodes').data(nodes).enter().append('g').attr('class', 'gNodes'); // 绘制外部圆环弧线\n\n    const innerRadius = width / 2 * 0.7;\n    const outerRadius = innerRadius * 1.2;\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n    gOuter.append('path').attr('class', 'outerPath').style('fill', function (d) {\n      return color(d.index);\n    }) // .style('stroke', function (d) { return d3.rgb(color(d.index)).darker() })\n    .attr('d', arc); // 节点文字绘制\n\n    gOuter.append('text').each(function (d, i) {\n      // 为绑定的数据添加变量\n      d.angle = (d.startAngle + d.endAngle) / 2; // 弧的中心角度\n\n      d.name = continent[i];\n    }).attr('class', 'outerText').attr('dy', '.35em').attr('transform', function (d) {\n      let result = 'rotate(' + d.angle * 180 / Math.PI + ')'; // 旋转\n\n      result += 'translate(-15,' + -1.0 * (outerRadius + 10) + ')'; // 平移\n      // 对下方文字做旋转180度处理\n\n      if (d.angle > Math.PI * 3 / 4 && d.angle < Math.PI * 5 / 4) {\n        result += 'rotate(180)';\n      }\n\n      return result;\n    }).text(function (d) {\n      return d.name;\n    }); // 添加内部的弦\n\n    let ribbon = d3.ribbon().radius(innerRadius);\n    g.append('g').selectAll('path').data(arcs).enter().append('path').attr('class', 'innerPath').attr('d', ribbon).style('fill', function (d) {\n      return color(d.target.index);\n    }).style('stroke', function (d) {\n      return d3.rgb(color(d.target.index)).darker();\n    }).on('mouseover', (d, i) => {\n      // d3.event.target.style.fill = d3.rgb(color(d.target.index)).darker()\n      console.log(d.index);\n      d3.event.target.style.fill = d3.rgb(color(d.target.index)).brighter();\n    }).on('mouseout', (d, i) => {\n      d3.event.target.style.fill = color(d.target.index);\n    }); // 添加鼠标移入动画\n\n    gOuter.selectAll('.outerPath').on('mouseover', function (data) {\n      let i = data.index; // 选取所有的内部弦，过滤得到所有与当前圆环块没有关系的弦\n\n      svg.selectAll('.innerPath').filter(function (d) {\n        return d.source.index !== i && d.target.index !== i;\n      }) // 得到所有的没有关系的弦后，将其透明度变为0，不用display可避免操作DOM\n      .transition().duration(500).style('opacity', 0);\n    }).on('mouseout', function (data) {\n      let i = data.index;\n      svg.selectAll('.innerPath').filter(function (d) {\n        return d.source.index !== i && d.target.index !== i;\n      }).transition().duration(500).style('opacity', 1);\n    });\n  }\n\n  componentDidMount() {\n    this.drawChord(this.data.matrix, this.data.continent);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default ChordChart;","map":{"version":3,"sources":["/Volumes/Macintosh HD - 数据/yu01/d3_ex/src/chart/chordChart/chordChart.js"],"names":["React","Component","d3","ChordChart","constructor","props","data","chartState","drawChord","continent","padding","width","pieHeight","radius","svg","select","append","attr","style","left","top","chord","console","log","nodes","arcs","map","item","color","scaleOrdinal","schemeCategory10","g","gOuter","selectAll","enter","innerRadius","outerRadius","arc","d","index","each","i","angle","startAngle","endAngle","name","result","Math","PI","text","ribbon","target","rgb","darker","on","event","fill","brighter","filter","source","transition","duration","componentDidMount","matrix","render"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport * as d3 from 'd3'\n\nclass ChordChart extends Component{\n  constructor(props) {\n    super(props);\n    this.data = props.chartState\n  }\n\n  drawChord (data, continent) {\n    const padding = this.data.padding\n    const width = this.data.width\n    const pieHeight = this.data.pieHeight\n    const radius = this.data.radius\n\n    const svg = d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", this.data.width)\n      .attr(\"height\", this.data.pieHeight)\n      .style('padding-left', padding.left)\n      .style('padding-top', padding.top)\n\n    const chord = d3.chord()\n                    // .padAngle(0.03)\n                    // .sortSubgroups(d3.ascending)\n    console.log(chord)\n\n    // 获取节点,也就是最后那个group,即五大洲对应的角度参数值,这里必须要这么做，否则取不到对应的角度值\n    const nodes = chord(data)['groups']\n\n    // 获取弦,需要剔除最后的那个group\n    const arcs = chord(data).map((item) => {\n      return item\n    })\n\n    const color = d3.scaleOrdinal(d3.schemeCategory10)\n\n    const g = svg.append('g')\n                  .attr('transform', 'translate(' + width/2 + ',' + pieHeight/2 + ')')\n\n    //装节点的外部圆环g,之后所有的绘图都在这个容器里面画\n    const gOuter = g.selectAll('.gNodes')\n                      .data(nodes)\n                      .enter()\n                      .append('g')\n                      .attr('class', 'gNodes')\n\n    // 绘制外部圆环弧线\n    const innerRadius = width / 2 * 0.7;\n    const outerRadius = innerRadius * 1.2\n\n    const arc = d3.arc()\n      .innerRadius(innerRadius)\n      .outerRadius(outerRadius)\n\n    gOuter.append('path')\n          .attr('class', 'outerPath')\n          .style('fill', function (d) { return color(d.index) })\n          // .style('stroke', function (d) { return d3.rgb(color(d.index)).darker() })\n          .attr('d', arc)\n\n    // 节点文字绘制\n    gOuter.append('text')\n          .each(function (d, i) { // 为绑定的数据添加变量\n            d.angle = (d.startAngle + d.endAngle) / 2 // 弧的中心角度\n            d.name = continent[i]\n          })\n          .attr('class', 'outerText')\n          .attr('dy', '.35em')\n          .attr('transform', function (d) {\n            let result = 'rotate(' + (d.angle * 180) / Math.PI + ')' // 旋转\n            result += 'translate(-15,' + -1.0 * (outerRadius + 10) + ')' // 平移\n            // 对下方文字做旋转180度处理\n            if (d.angle > Math.PI * 3 / 4 && d.angle < Math.PI * 5 / 4) {\n              result += 'rotate(180)'\n            }\n            return result\n          })\n          .text(function (d) {\n            return d.name\n          })\n\n    // 添加内部的弦\n    let ribbon = d3.ribbon()\n                    .radius(innerRadius)\n\n    g.append('g')\n      .selectAll('path')\n      .data(arcs)\n      .enter()\n      .append('path')\n      .attr('class', 'innerPath')\n      .attr('d', ribbon)\n      .style('fill', function (d) { return color(d.target.index) })\n      .style('stroke', function (d) { return d3.rgb(color(d.target.index)).darker() })\n      .on('mouseover', (d, i) => {\n        // d3.event.target.style.fill = d3.rgb(color(d.target.index)).darker()\n        console.log(d.index)\n        d3.event.target.style.fill = d3.rgb(color(d.target.index)).brighter()\n      })\n      .on('mouseout', (d, i) => {\n        d3.event.target.style.fill = color(d.target.index)\n      })\n\n\n    // 添加鼠标移入动画\n    gOuter.selectAll('.outerPath')\n          .on('mouseover', function (data) {\n            let i = data.index\n            // 选取所有的内部弦，过滤得到所有与当前圆环块没有关系的弦\n            svg.selectAll('.innerPath')\n              .filter(function (d) {\n                return d.source.index !== i && d.target.index !== i\n              })\n            // 得到所有的没有关系的弦后，将其透明度变为0，不用display可避免操作DOM\n              .transition()\n              .duration(500)\n              .style('opacity', 0)\n          })\n          .on('mouseout', function (data) {\n            let i = data.index\n            svg.selectAll('.innerPath')\n              .filter(function (d) {\n                return d.source.index !== i && d.target.index !== i\n              })\n              .transition()\n              .duration(500)\n              .style('opacity', 1)\n          })\n  }\n\n  componentDidMount() {\n    this.drawChord(this.data.matrix, this.data.continent)\n  }\n\n  render() {\n    return <div></div>\n  }\n\n}\n\nexport default ChordChart"]},"metadata":{},"sourceType":"module"}